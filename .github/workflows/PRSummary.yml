name: PR Summary Generator

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  summarize:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install @octokit/rest
          npm install openai

      - name: Generate and Post Summary
        uses: actions/github-script@v7
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const OpenAI = require('openai');

            const openai = new OpenAI({
              apiKey: process.env.OPENAI_API_KEY
            });

            // Get PR diff
            const diff = await exec.getExecOutput('git diff origin/main...HEAD', [], {
              silent: true
            });

            // Generate summary using ChatGPT
            const completion = await openai.chat.completions.create({
              model: "gpt-3.5-turbo",
              messages: [
                {
                  role: "system",
                  content: "You are a helpful assistant that summarizes code changes. Keep summaries concise and focus on the key changes and their impact."
                },
                {
                  role: "user",
                  content: `Please summarize these code changes:\n${diff.stdout}`
                }
              ]
            });

            const summary = completion.choices[0].message.content;

            // Post comment on PR
            const commentBody = `## ðŸ¤– AI-Generated PR Summary\n\n${summary}\n\n---\n*This summary was automatically generated using ChatGPT*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });